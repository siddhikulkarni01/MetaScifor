# -*- coding: utf-8 -*-
"""array.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hJnwfFIhyoT_zsHu-6cKr-qZoytvcIc5
"""

pip install numpy

import numpy as np
array = np.array([1,2,3,4,5])
print(array)
print(type(array))

#create array using tuple

import numpy as np
array = ((1,2,3,4,5))
print(array)
print(type(array))

#Dimension

#0-D
array = np.array(42)
print(array)

#1-D
array = np.array([1,2,3,4,5])
print(array)

#2-D
array = np.array([[1,2,3],[4,5,6]])
print(array)

#3-D

array = np.array([[[1,2,3],[4,5,6]],[[7,8,9],[9,8,7]]])
print(array)

#ndim

a1 = np.array(42)
a2 = np.array([1,2,3,4,5])
a3 = np.array([[1,2,3],[4,5,6]])
a4 = np.array([[[1,2,3],[4,5,6]],[[6,7,8],[9,8,5]]])

print(a1.ndim)
print(a2.ndim)
print(a3.ndim)
print(a4.ndim)

#Create an array with 5 dimensions and verify that it has 5 dimensions:

array = np.array([1,2,3,4,5],ndmin = 5)
print(array)
print(array.ndim)

# Array Indexing
array = np.array([1,2,3,4,5])
print(array[1])

# add array elements

array = np.array([1,2,3,4,5])
print(array[1]+array[3])

#access 2d array index

array = np.array([[1,2,3,4],[5,6,7,8]])
print(array[1][3])

array = np.array([[[1,2,3],[4,5,6]],[[9,8,7],[6,5,4]]])
# arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])
print(array[0,1,2])

array = np.array([[1,2,3,4],[5,6,7,8]])
print(array[1,-1])

#array slicing

array = np.array([1,2,3,5,6,7,88,99])
print(array[1:5])
print(array[:4])
print(array[3:])
print(array[-3:-1])
print(array[1:6:2])

#array slicing 2-D

array = np.array([[1,2,3],[4,5,6]])

print(array[1,:1])

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 2])

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])

print(arr[0:2, 1:4])

#data type

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
print(arr.dtype)

arr = np.array([1.1, 2.1, 3.1])

newarr = arr.astype('i')

print(newarr)
print(newarr.dtype)

arr = np.array([1, 0, 3])

newarr = arr.astype(bool)

print(newarr)
print(newarr.dtype)

arr = np.array([1, 2, 3, 4, 5])
x = arr.copy()
arr[0] = 42

print(arr)
print(x)

#view
arr = np.array([1, 2, 3, 4, 5])
x = arr.view()
arr[0] = 42

print(arr)
print(x)

arr = np.array([1, 2, 3, 4, 5])
x = arr.view()
x[0] = 31

print(arr)
print(x)

#shape

arr = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])
print(arr.shape)

arr = np.array([1, 2, 3, 4], ndmin=5)

print(arr)
print('shape of array :', arr.shape)

#reshape
arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])

newarr = arr.reshape(4, 3)

print(newarr)

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])

newarr = arr.reshape(2, 3, 2)

print(newarr)

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8])

newarr = arr.reshape(2, 2, -1)

print(newarr)

arr = np.array([[1, 2, 3], [4, 5, 6]])

for x in arr:
  print(x)

arr1 = np.array([1, 2, 3])

arr2 = np.array([4, 5, 6])

arr = np.concatenate((arr1, arr2))

print(arr)

#2-D
arr1 = np.array([[1, 2], [3, 4]])

arr2 = np.array([[5, 6], [7, 8]])

arr = np.concatenate((arr1, arr2), axis=1)

print(arr)

#split
arr = np.array([1, 2, 3, 4, 5, 6])

newarr = np.array_split(arr, 3)

print(newarr)

arr = np.array([1, 2, 3, 4, 5, 4, 4])

x = np.where(arr == 4)

print(x)

#search odd index

arr = np.array([1, 2, 3, 4, 5, 6, 7, 8])

x = np.where(arr%2 == 1)

print(x)

import numpy as np

arr = np.array([3, 2, 0, 1])

print(np.sort(arr))

arr = np.array([[3, 2, 4], [5, 0, 1]])

print(np.sort(arr))

arr = np.array([41, 42, 43, 44])

filter_arr = []

for element in arr:

  if element > 42:
    filter_arr.append(True)
  else:
    filter_arr.append(False)

newarr = arr[filter_arr]

print(filter_arr)
print(newarr)